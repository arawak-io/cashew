"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils","angularFileUpload","ngMaterial","lumx","xeditable"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();
"use strict";angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.html5Mode(!0).hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])});
"use strict";ApplicationConfiguration.registerModule("articles");
"use strict";ApplicationConfiguration.registerModule("chat");
"use strict";ApplicationConfiguration.registerModule("core");
"use strict";ApplicationConfiguration.registerModule("employees");
"use strict";ApplicationConfiguration.registerModule("memos");
"use strict";ApplicationConfiguration.registerModule("settings");
"use strict";ApplicationConfiguration.registerModule("users");
"use strict";angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Articles",state:"articles.list",icon:"file-document",type:"dropdown"}),Menus.addSubMenuItem("topbar","articles",{title:"List Articles",state:"articles.list"}),Menus.addSubMenuItem("topbar","articles",{title:"Create Articles",state:"articles.create"})}]);
"use strict";angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("articles",{"abstract":!0,url:"/articles",template:"<ui-view/>"}).state("articles.list",{url:"",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("articles.create",{url:"/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("articles.view",{url:"/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("articles.edit",{url:"/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]);
"use strict";angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]);
"use strict";angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("api/articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("chat").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Chat",state:"chat",icon:"message"})}]);
"use strict";angular.module("chat").config(["$stateProvider",function($stateProvider){$stateProvider.state("chat",{url:"/chat",templateUrl:"modules/chat/views/chat.client.view.html"})}]);
"use strict";angular.module("chat").controller("ChatController",["$scope","Socket",function($scope,Socket){$scope.messages=[],Socket.on("chatMessage",function(message){$scope.messages.unshift(message)}),$scope.sendMessage=function(){var message={text:this.messageText};Socket.emit("chatMessage",message),this.messageText=""},$scope.$on("$destroy",function(){Socket.removeListener("chatMessage")})}]);
"use strict";var app=angular.module("core");app.controller("HeaderController",["$scope","$state","$mdSidenav","Authentication","Menus","LxNotificationService","LxDialogService",function($scope,$state,$mdSidenav,Authentication,Menus,LxNotificationService,LxDialogService){$scope.$state=$state,$scope.authentication=Authentication,$scope.menu=Menus.getMenu("topbar"),$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1}),$scope.toggleSidenav=function(menuId){$mdSidenav(menuId).toggle()},$scope.toggleRight=function(){$mdSidenav("right").toggle()},$scope.alert=function(){LxNotificationService.alert("Arawak","Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sit amet urna quis nisi sodales semper pharetra eu augue.","Ok",function(){})},$scope.opendDialog=function(dialogId){LxDialogService.open(dialogId)},$scope.closingDialog=function(){LxNotificationService.info("Dialog closed!")}}]),app.controller("LeftCtrl",["$scope","$timeout","$mdSidenav","$log",function($scope,$timeout,$mdSidenav){$scope.close=function(){$mdSidenav("left").close().then(function(){})}}]),app.controller("RightCtrl",["$scope","$timeout","$mdSidenav","$log",function($scope,$timeout,$mdSidenav){$scope.close=function(){$mdSidenav("right").close().then(function(){})}}]);
"use strict";var app=angular.module("core");app.controller("HomeController",["$scope","Authentication","$location",function($scope,Authentication,$location){$scope.authentication=Authentication,$scope.authentication.user||$location.path("/authentication/signin")}]);
"use strict";angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/dashboard"),$stateProvider.state("home",{url:"/dashboard",templateUrl:"modules/core/views/home.client.view.html"})}]);
"use strict";angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?!0:options.isPublic,roles:options.roles||this.defaultRoles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:options.title||"",state:options.state||"",icon:options.icon||"",type:options.type||"item","class":options.class,isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?this.menus[menuId].isPublic:options.isPublic,roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].roles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.link,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?this.menus[menuId].items[itemIndex].isPublic:options.isPublic,roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{isPublic:!1})}]);
"use strict";angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){Authentication.user?this.socket=io():$state.go("home"),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){callback(data)})})},this.emit=function(eventName,data){this.socket&&this.socket.emit(eventName,data)},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]);
"use strict";var app=angular.module("employees");app.run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Directory",state:"employees.list",icon:"account-multiple",type:"dropdown"}),Menus.addSubMenuItem("topbar","employees",{title:"List Employees",state:"employees.list"}),Menus.addSubMenuItem("topbar","employees",{title:"Create Employee",state:"employees.create"})}]),app.run(["editableOptions",function(editableOptions){editableOptions.theme="default"}]);
"use strict";angular.module("employees").config(["$stateProvider",function($stateProvider){$stateProvider.state("employees",{"abstract":!0,url:"/employees",template:"<ui-view/>"}).state("employees.list",{url:"",templateUrl:"modules/employees/views/list-employees.client.view.html"}).state("employees.create",{url:"/create",templateUrl:"modules/employees/views/create-employee.client.view.html"}).state("employees.view",{url:"/:employeeId",templateUrl:"modules/employees/views/view-employee.client.view.html"}).state("employees.edit",{url:"/:employeeId/edit",templateUrl:"modules/employees/views/edit-employee.client.view.html"})}]);
"use strict";var app=angular.module("employees");app.controller("EmployeesController",["$scope","$stateParams","$location","Authentication","Employees","LxNotificationService","LxDialogService",function($scope,$stateParams,$location,Authentication,Employees,LxNotificationService,LxDialogService){$scope.authentication=Authentication,$scope.create=function(){var employee=new Employees({name:this.name});employee.$save(function(response){$location.path("employees/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(employee){if(employee){employee.$remove();for(var i in $scope.employees)$scope.employees[i]===employee&&$scope.employees.splice(i,1)}else $scope.employee.$remove(function(){$location.path("employees")})},$scope.update=function(){var employee=$scope.employee;employee.$update(function(){$location.path("employees/"+employee._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.employees=Employees.query()},$scope.findOne=function(){$scope.employee=Employees.get({employeeId:$stateParams.employeeId})},$scope.isAllowed=function(user){if(user)for(var userRoleIndex in user.roles)if("admin"===user.roles[userRoleIndex])return!0},$scope.alert=function(){LxNotificationService.alert("Arawak","Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sit amet urna quis nisi sodales semper pharetra eu augue.","Ok",function(){})},$scope.opendDialog=function(dialogId){LxDialogService.open(dialogId)}}]);
"use strict";angular.module("employees").factory("Employees",["$resource",function($resource){return $resource("api/employees/:employeeId",{employeeId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("memos").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Memos",state:"memos.list",icon:"file-document",type:"dropdown"}),Menus.addSubMenuItem("topbar","memos",{title:"List Memos",state:"memos.list"}),Menus.addSubMenuItem("topbar","memos",{title:"Create Memo",state:"memos.create"})}]);
"use strict";angular.module("memos").config(["$stateProvider",function($stateProvider){$stateProvider.state("memos",{"abstract":!0,url:"/memos",template:"<ui-view/>"}).state("memos.list",{url:"",templateUrl:"modules/memos/views/list-memos.client.view.html"}).state("memos.create",{url:"/create",templateUrl:"modules/memos/views/create-memo.client.view.html"}).state("memos.view",{url:"/:memoId",templateUrl:"modules/memos/views/view-memo.client.view.html"}).state("memos.edit",{url:"/:memoId/edit",templateUrl:"modules/memos/views/edit-memo.client.view.html"})}]);
"use strict";angular.module("memos").controller("MemosController",["$scope","$stateParams","$location","Authentication","Memos",function($scope,$stateParams,$location,Authentication,Memos){$scope.authentication=Authentication,$scope.create=function(){var memo=new Memos({name:this.name});memo.$save(function(response){$location.path("memos/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(memo){if(memo){memo.$remove();for(var i in $scope.memos)$scope.memos[i]===memo&&$scope.memos.splice(i,1)}else $scope.memo.$remove(function(){$location.path("memos")})},$scope.update=function(){var memo=$scope.memo;memo.$update(function(){$location.path("memos/"+memo._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.memos=Memos.query()},$scope.findOne=function(){$scope.memo=Memos.get({memoId:$stateParams.memoId})}}]);
"use strict";angular.module("memos").factory("Memos",["$resource",function($resource){return $resource("api/memos/:memoId",{memoId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("settings").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Settings",state:"settings",icon:"settings",type:"dropdown"}),Menus.addSubMenuItem("topbar","settings",{title:"List Settings",state:"settings.list"}),Menus.addSubMenuItem("topbar","settings",{title:"Create Setting",state:"settings.create"})}]);
"use strict";angular.module("settings").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",template:"<ui-view/>"}).state("settings.list",{url:"",templateUrl:"modules/settings/views/list-settings.client.view.html"}).state("settings.create",{url:"/create",templateUrl:"modules/settings/views/create-setting.client.view.html"}).state("settings.view",{url:"/:settingId",templateUrl:"modules/settings/views/view-setting.client.view.html"}).state("settings.edit",{url:"/:settingId/edit",templateUrl:"modules/settings/views/edit-setting.client.view.html"})}]);
"use strict";angular.module("settings").controller("SettingsController",["$scope","$stateParams","$location","Authentication","Settings",function($scope,$stateParams,$location,Authentication,Settings){$scope.authentication=Authentication,$scope.create=function(){var setting=new Settings({name:this.name});setting.$save(function(response){$location.path("settings/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(setting){if(setting){setting.$remove();for(var i in $scope.settings)$scope.settings[i]===setting&&$scope.settings.splice(i,1)}else $scope.setting.$remove(function(){$location.path("settings")})},$scope.update=function(){var setting=$scope.setting;setting.$update(function(){$location.path("settings/"+setting._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.settings=Settings.query()},$scope.findOne=function(){$scope.setting=Settings.get({settingId:$stateParams.settingId})}}]);
"use strict";angular.module("settings").factory("Settings",["$resource",function($resource){return $resource("api/settings/:settingId",{settingId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]);
"use strict";angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings.profile",{url:"/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/views/settings/manage-social-accounts.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/views/settings/change-profile-picture.client.view.html"}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/views/authentication/authentication.client.view.html"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("authentication.signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]);
"use strict";angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication","LxNotificationService",function($scope,$http,$location,Authentication,LxNotificationService){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/api/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/api/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message,LxNotificationService.error(response.message)})},$scope.help=function(){LxNotificationService.confirm("Forget your password?"," No worries! We can reset it for you.",{cancel:"Disagree",ok:"Agree"},function(answer){console.log(answer),answer===!0&&$location.path("/forgot")})}}]);
"use strict";angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/authentication/signin"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/api/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/authentication/signin"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]);
"use strict";angular.module("users").factory("Users",["$resource",function($resource){return $resource("api/users",{},{update:{method:"PUT"}})}]);
"use strict";angular.module("users").controller("ChangePasswordController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("ChangeProfilePictureController",["$scope","$timeout","$window","Authentication","FileUploader",function($scope,$timeout,$window,Authentication,FileUploader){$scope.user=Authentication.user,$scope.imageURL=$scope.user.profileImageURL,$scope.uploader=new FileUploader({url:"api/users/picture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response){$scope.success=!0,$scope.user=Authentication.user=response,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=$scope.user.profileImageURL}}]);
"use strict";angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0}}]);
"use strict";angular.module("users").controller("SocialAccountsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/authentication/signin")}]);